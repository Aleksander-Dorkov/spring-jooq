/*
 * This file is generated by jOOQ.
 */
package com.example.jooqtest.jooq.tables.records;


import com.example.jooqtest.jooq.tables.Enrollment;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EnrollmentRecord extends UpdatableRecordImpl<EnrollmentRecord> implements Record4<Integer, Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.enrollment.enrollment_id</code>.
     */
    public EnrollmentRecord setEnrollmentId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.enrollment.enrollment_id</code>.
     */
    public Integer getEnrollmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.enrollment.student_id</code>.
     */
    public EnrollmentRecord setStudentId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.enrollment.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.enrollment.course_id</code>.
     */
    public EnrollmentRecord setCourseId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.enrollment.course_id</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.enrollment.grade</code>.
     */
    public EnrollmentRecord setGrade(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.enrollment.grade</code>.
     */
    public BigDecimal getGrade() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Enrollment.ENROLLMENT.ENROLLMENT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Enrollment.ENROLLMENT.STUDENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Enrollment.ENROLLMENT.COURSE_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Enrollment.ENROLLMENT.GRADE;
    }

    @Override
    public Integer component1() {
        return getEnrollmentId();
    }

    @Override
    public Integer component2() {
        return getStudentId();
    }

    @Override
    public Integer component3() {
        return getCourseId();
    }

    @Override
    public BigDecimal component4() {
        return getGrade();
    }

    @Override
    public Integer value1() {
        return getEnrollmentId();
    }

    @Override
    public Integer value2() {
        return getStudentId();
    }

    @Override
    public Integer value3() {
        return getCourseId();
    }

    @Override
    public BigDecimal value4() {
        return getGrade();
    }

    @Override
    public EnrollmentRecord value1(Integer value) {
        setEnrollmentId(value);
        return this;
    }

    @Override
    public EnrollmentRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public EnrollmentRecord value3(Integer value) {
        setCourseId(value);
        return this;
    }

    @Override
    public EnrollmentRecord value4(BigDecimal value) {
        setGrade(value);
        return this;
    }

    @Override
    public EnrollmentRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnrollmentRecord
     */
    public EnrollmentRecord() {
        super(Enrollment.ENROLLMENT);
    }

    /**
     * Create a detached, initialised EnrollmentRecord
     */
    public EnrollmentRecord(Integer enrollmentId, Integer studentId, Integer courseId, BigDecimal grade) {
        super(Enrollment.ENROLLMENT);

        setEnrollmentId(enrollmentId);
        setStudentId(studentId);
        setCourseId(courseId);
        setGrade(grade);
        resetChangedOnNotNull();
    }
}
