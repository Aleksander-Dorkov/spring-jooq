/*
 * This file is generated by jOOQ.
 */
package com.example.jooqtest.jooq.tables.records;


import com.example.jooqtest.jooq.tables.Teacher;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TeacherRecord extends UpdatableRecordImpl<TeacherRecord> implements Record4<Integer, String, Integer, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.teacher.teacher_id</code>.
     */
    public TeacherRecord setTeacherId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.teacher.teacher_id</code>.
     */
    public Integer getTeacherId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.teacher.name</code>.
     */
    public TeacherRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.teacher.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.teacher.department_id</code>.
     */
    public TeacherRecord setDepartmentId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.teacher.department_id</code>.
     */
    public Integer getDepartmentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.teacher.hire_date</code>.
     */
    public TeacherRecord setHireDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.teacher.hire_date</code>.
     */
    public LocalDate getHireDate() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Teacher.TEACHER.TEACHER_ID;
    }

    @Override
    public Field<String> field2() {
        return Teacher.TEACHER.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Teacher.TEACHER.DEPARTMENT_ID;
    }

    @Override
    public Field<LocalDate> field4() {
        return Teacher.TEACHER.HIRE_DATE;
    }

    @Override
    public Integer component1() {
        return getTeacherId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getDepartmentId();
    }

    @Override
    public LocalDate component4() {
        return getHireDate();
    }

    @Override
    public Integer value1() {
        return getTeacherId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getDepartmentId();
    }

    @Override
    public LocalDate value4() {
        return getHireDate();
    }

    @Override
    public TeacherRecord value1(Integer value) {
        setTeacherId(value);
        return this;
    }

    @Override
    public TeacherRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TeacherRecord value3(Integer value) {
        setDepartmentId(value);
        return this;
    }

    @Override
    public TeacherRecord value4(LocalDate value) {
        setHireDate(value);
        return this;
    }

    @Override
    public TeacherRecord values(Integer value1, String value2, Integer value3, LocalDate value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeacherRecord
     */
    public TeacherRecord() {
        super(Teacher.TEACHER);
    }

    /**
     * Create a detached, initialised TeacherRecord
     */
    public TeacherRecord(Integer teacherId, String name, Integer departmentId, LocalDate hireDate) {
        super(Teacher.TEACHER);

        setTeacherId(teacherId);
        setName(name);
        setDepartmentId(departmentId);
        setHireDate(hireDate);
        resetChangedOnNotNull();
    }
}
