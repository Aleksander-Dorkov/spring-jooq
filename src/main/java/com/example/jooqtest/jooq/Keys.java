/*
 * This file is generated by jOOQ.
 */
package com.example.jooqtest.jooq;


import com.example.jooqtest.jooq.tables.Course;
import com.example.jooqtest.jooq.tables.Department;
import com.example.jooqtest.jooq.tables.Enrollment;
import com.example.jooqtest.jooq.tables.FlywayMigrations;
import com.example.jooqtest.jooq.tables.Student;
import com.example.jooqtest.jooq.tables.Teacher;
import com.example.jooqtest.jooq.tables.records.CourseRecord;
import com.example.jooqtest.jooq.tables.records.DepartmentRecord;
import com.example.jooqtest.jooq.tables.records.EnrollmentRecord;
import com.example.jooqtest.jooq.tables.records.FlywayMigrationsRecord;
import com.example.jooqtest.jooq.tables.records.StudentRecord;
import com.example.jooqtest.jooq.tables.records.TeacherRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CourseRecord> COURSE_PKEY = Internal.createUniqueKey(Course.COURSE, DSL.name("course_pkey"), new TableField[] { Course.COURSE.COURSE_ID }, true);
    public static final UniqueKey<DepartmentRecord> DEPARTMENT_PKEY = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("department_pkey"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<EnrollmentRecord> ENROLLMENT_PKEY = Internal.createUniqueKey(Enrollment.ENROLLMENT, DSL.name("enrollment_pkey"), new TableField[] { Enrollment.ENROLLMENT.ENROLLMENT_ID }, true);
    public static final UniqueKey<FlywayMigrationsRecord> FLYWAY_MIGRATIONS_PK = Internal.createUniqueKey(FlywayMigrations.FLYWAY_MIGRATIONS, DSL.name("flyway_migrations_pk"), new TableField[] { FlywayMigrations.FLYWAY_MIGRATIONS.INSTALLED_RANK }, true);
    public static final UniqueKey<StudentRecord> STUDENT_PKEY = Internal.createUniqueKey(Student.STUDENT, DSL.name("student_pkey"), new TableField[] { Student.STUDENT.STUDENT_ID }, true);
    public static final UniqueKey<TeacherRecord> TEACHER_PKEY = Internal.createUniqueKey(Teacher.TEACHER, DSL.name("teacher_pkey"), new TableField[] { Teacher.TEACHER.TEACHER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CourseRecord, DepartmentRecord> COURSE__COURSE_DEPARTMENT_ID_FKEY = Internal.createForeignKey(Course.COURSE, DSL.name("course_department_id_fkey"), new TableField[] { Course.COURSE.DEPARTMENT_ID }, Keys.DEPARTMENT_PKEY, new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final ForeignKey<EnrollmentRecord, CourseRecord> ENROLLMENT__ENROLLMENT_COURSE_ID_FKEY = Internal.createForeignKey(Enrollment.ENROLLMENT, DSL.name("enrollment_course_id_fkey"), new TableField[] { Enrollment.ENROLLMENT.COURSE_ID }, Keys.COURSE_PKEY, new TableField[] { Course.COURSE.COURSE_ID }, true);
    public static final ForeignKey<EnrollmentRecord, StudentRecord> ENROLLMENT__ENROLLMENT_STUDENT_ID_FKEY = Internal.createForeignKey(Enrollment.ENROLLMENT, DSL.name("enrollment_student_id_fkey"), new TableField[] { Enrollment.ENROLLMENT.STUDENT_ID }, Keys.STUDENT_PKEY, new TableField[] { Student.STUDENT.STUDENT_ID }, true);
    public static final ForeignKey<EnrollmentRecord, CourseRecord> ENROLLMENT__FK_COURSE = Internal.createForeignKey(Enrollment.ENROLLMENT, DSL.name("fk_course"), new TableField[] { Enrollment.ENROLLMENT.COURSE_ID }, Keys.COURSE_PKEY, new TableField[] { Course.COURSE.COURSE_ID }, true);
    public static final ForeignKey<EnrollmentRecord, StudentRecord> ENROLLMENT__FK_STUDENT = Internal.createForeignKey(Enrollment.ENROLLMENT, DSL.name("fk_student"), new TableField[] { Enrollment.ENROLLMENT.STUDENT_ID }, Keys.STUDENT_PKEY, new TableField[] { Student.STUDENT.STUDENT_ID }, true);
    public static final ForeignKey<StudentRecord, DepartmentRecord> STUDENT__STUDENT_DEPARTMENT_ID_FKEY = Internal.createForeignKey(Student.STUDENT, DSL.name("student_department_id_fkey"), new TableField[] { Student.STUDENT.DEPARTMENT_ID }, Keys.DEPARTMENT_PKEY, new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final ForeignKey<StudentRecord, TeacherRecord> STUDENT__STUDENT_TEACHER_ID_FKEY = Internal.createForeignKey(Student.STUDENT, DSL.name("student_teacher_id_fkey"), new TableField[] { Student.STUDENT.TEACHER_ID }, Keys.TEACHER_PKEY, new TableField[] { Teacher.TEACHER.TEACHER_ID }, true);
    public static final ForeignKey<TeacherRecord, DepartmentRecord> TEACHER__TEACHER_DEPARTMENT_ID_FKEY = Internal.createForeignKey(Teacher.TEACHER, DSL.name("teacher_department_id_fkey"), new TableField[] { Teacher.TEACHER.DEPARTMENT_ID }, Keys.DEPARTMENT_PKEY, new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
}
